# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//third_party/protobuf/proto_library.gni")

source_set("lib") {
  sources = [
    "cobalt_app.cc",
    "cobalt_app.h",
    "cobalt_controller_impl.cc",
    "cobalt_controller_impl.h",
    "cobalt_encoder_factory_impl.cc",
    "cobalt_encoder_factory_impl.h",
    "cobalt_encoder_impl.cc",
    "cobalt_encoder_impl.h",
    "product_hack.h",
    "timer_manager.cc",
    "timer_manager.h",
    "utils.cc",
    "utils.h",
  ]

  public_deps = [
    "//garnet/bin/cobalt/utils:fuchsia_http_client",
    "//garnet/lib/wlan/mlme:mlme",
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/network_wrapper",
    "//third_party/cobalt/config:client_config",
    "//third_party/cobalt/config:cobalt_config_proto",
    "//third_party/cobalt/encoder",
    "//third_party/cobalt/util:pem_util",
    "//third_party/grpc:grpc++",
    "//third_party/protobuf:protobuf_lite",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/fidl/cobalt:cobalt",
  ]
}

executable("app") {
  output_name = "cobalt"

  sources = [
    "cobalt_main.cc",
  ]

  deps = [
    ":lib",
  ]
}

package("cobalt") {
  deps = [
    ":app",
    "//third_party/cobalt_config",
  ]

  binary = "cobalt"

  meta = [
    {
      path = rebase_path("meta/cobalt.cmx")
      dest = "cobalt.cmx"
    },
  ]

  resources = [
    {
      path = rebase_path(
              get_label_info("//third_party/cobalt_config", "target_gen_dir") +
              "/cobalt_config.binproto")
      dest = "cobalt_config.binproto"
    },
    {
      path = rebase_path(
              "//third_party/cobalt/production/fuchsia-cobalt-us-central1-c/analyzer_public.pem")
      dest = "certs/cobaltv0.1/analyzer_public.pem"
    },
    {
      path = rebase_path(
              "//third_party/cobalt/production/fuchsia-cobalt-us-central1-c/shuffler_public.pem")
      dest = "certs/cobaltv0.1/shuffler_public.pem"
    },
  ]
}

executable("cobalt_app_unittests") {
  testonly = true

  sources = [
    "timer_manager.cc",
    "timer_manager.h",
    "timer_manager_test.cc",
  ]

  deps = [
    "//garnet/lib/wlan/mlme:mlme",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl/test:gtest_main",
    "//garnet/public/lib/gtest",
    "//zircon/public/fidl/cobalt:cobalt",
  ]
}
