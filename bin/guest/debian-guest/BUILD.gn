# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//garnet/bin/guest/guest.gni")

declare_args() {
  # By default we bundle a ready-only root filesystem as a package resource.
  # This is simple but can be undesirable for if booting using a bootfs or
  # netbooting (as these images will be stored in RAM).
  #
  # If set to true, a USB drive should be formatted using |build-usb.sh| and
  # inserted in the target device prior to launching a debian-guest.
  debian_guest_usb_root = false
}

if (target_cpu == "x64") {
  image_dir = "debian-x86"
  arch_cmdline = "earlycon=uart,io,0x3f8 io_delay=none clocksource=tsc"
  if (debian_guest_usb_root) {
    # Standard x86-64 Linux Root GPT GUID
    partition_guid = "4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709"
  }
} else if (target_cpu == "arm64") {
  image_dir = "debian-arm64"
  arch_cmdline = "earlycon=pl011,0xfff32000"
  if (debian_guest_usb_root) {
    # Standard aarch64 Linux Root GPT GUID
    partition_guid = "B921B045-1DF0-41C3-AF44-4C6F280D3FAE"
  }
} else {
  panic("Unsupported architecture ${target_cpu}")
}

guest_app("debian-guest") {
  cmdline = "${arch_cmdline} console=hvc0 console=tty0 root=/dev/vda rw"
  linux = "${image_dir}/vmlinuz"
  ramdisk = "${image_dir}/initrd.img"

  if (debian_guest_usb_root) {
    block_devices = [ "type-guid:${partition_guid},rw,fdio" ]
  } else {
    disk_name = "filesystem.img"
    resources = [ {
          path = rebase_path("${image_dir}/rootfs.img")
          dest = disk_name
        } ]
    block_devices = [ "/pkg/data/${disk_name},ro,volatile" ]
  }
}
