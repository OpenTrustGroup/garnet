# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//garnet/bin/guest/pkg/guest_package.gni")

linux_dir = "$target_out_dir/linux/source"
sysroot_dir = "$target_out_dir/linux/sysroot"
linux_image = "$target_out_dir/linux/Image"
disk_image = "$target_out_dir/linux/disk.img"
initrd_image = "$target_out_dir/linux/initrd.img"

# Build a simple toybox sysroot that is packaged both as an initrd and
# as an ext2 filesystem image.
action("sysroot") {
  visibility = [ ":*" ]

  script = "//garnet/bin/guest/pkg/linux_guest/mksysroot.sh"
  args = [
    "-r",
    "-p",
    rebase_path("$disk_image"),
    "-i",
    "-o",
    rebase_path("$initrd_image"),
    "-d",
    rebase_path("$sysroot_dir/toybox"),
    "-s",
    rebase_path("$sysroot_dir/dash"),
    "$target_cpu",
  ]

  outputs = [
    disk_image,
    initrd_image,
  ]
}

action("kernel") {
  visibility = [ ":*" ]

  script = "//garnet/bin/guest/pkg/linux_guest/mklinux.sh"
  args = [
    "-l",
    rebase_path("$linux_dir"),
    "-o",
    rebase_path("$linux_image"),
    "$target_cpu",
  ]

  outputs = [
    linux_image,
  ]
}

guest_package("linux_guest") {
  deps = [
    ":kernel($host_toolchain)",
    ":sysroot($host_toolchain)",
  ]

  if (target_cpu == "arm64") {
    cmdline = "earlycon=pl011,0xfff32000"
  } else if (target_cpu == "x64") {
    cmdline = "earlycon=uart,io,0x3f8"
  }
  cmdline += " console=hvc0 console=tty0"

  host_out_dir = get_label_info(":bogus($host_toolchain)", "target_out_dir")
  linux = "$host_out_dir/linux/Image"
  ramdisk = "$host_out_dir/linux/initrd.img"

  disk_name = "filesystem.img"
  resources = [
    {
      path = rebase_path("$host_out_dir/linux/disk.img")
      dest = "${disk_name}"
    },
  ]
  block_devices = [ "/guest/data/${disk_name},ro,volatile" ]
}
