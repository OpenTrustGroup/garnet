# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

declare_args() {
  enable_dynamic_service = true
}

source_set("lib") {
  sources = [
    "manifest_parser.cc",
    "manifest_parser.h",
  ]

  if (enable_dynamic_service) {
    sources += [
      "dynamic_service_app.cc",
      "dynamic_service_app.h",
    ]
  }

  public_deps = [
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/fsl",
    "//third_party/rapidjson",
    "//zircon/public/lib/fs",
  ]
}

executable("bin") {
  output_name = "sysmgr"

  sources = [
    "app.cc",
    "app.h",
    "config.cc",
    "config.h",
    "delegating_loader.cc",
    "delegating_loader.h",
    "main.cc",
  ]

  deps = [
    ":lib",
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/fidl/cpp",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/svc/cpp",
    "//third_party/rapidjson",
    "//zircon/public/lib/async-default",
    "//zircon/public/lib/async-loop-cpp",
  ]

  defines = []
  if (enable_dynamic_service) {
    defines += [ "WITH_DYNAMIC_SERVICE" ]
    deps += [ "//garnet/public/lib/gzos/sysmgr/fidl" ]
  }
}

package("sysmgr") {
  deprecated_system_image = true
  deps = [
    ":bin",
  ]

  binaries = [
    {
      name = "sysmgr"
    },
  ]
}

template("config_package") {
  package(target_name) {
    deprecated_system_image = true
    resources = [
      {
        dest = "sysmgr/${invoker.name}"
        path = rebase_path("config/${invoker.name}")
      },
    ]
  }
}

config_package("services_config") {
  name = "services.config"
}
