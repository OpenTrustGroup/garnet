# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")

source_set("audio_mixer_lib") {
  sources = [
    "constants.h",
    "gain.cc",
    "gain.h",
    "mixer/linear_sampler.cc",
    "mixer/linear_sampler.h",
    "mixer/mixer.cc",
    "mixer/mixer.h",
    "mixer/mixer_utils.h",
    "mixer/no_op.cc",
    "mixer/no_op.h",
    "mixer/output_formatter.cc",
    "mixer/output_formatter.h",
    "mixer/point_sampler.cc",
    "mixer/point_sampler.h",
  ]

  public_deps = [
    "//garnet/public/lib/media/fidl",
  ]

  deps = [
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/media/timeline",
    "//zircon/public/lib/fbl",
  ]
}

executable("audio_server") {
  sources = [
    "audio_capturer_impl.cc",
    "audio_capturer_impl.h",
    "audio_device.cc",
    "audio_device.h",
    "audio_device_manager.cc",
    "audio_device_manager.h",
    "audio_driver.cc",
    "audio_driver.h",
    "audio_input.cc",
    "audio_input.h",
    "audio_link.cc",
    "audio_link.h",
    "audio_link_packet_source.cc",
    "audio_link_packet_source.h",
    "audio_link_ring_buffer_source.cc",
    "audio_link_ring_buffer_source.h",
    "audio_object.cc",
    "audio_object.h",
    "audio_output.cc",
    "audio_output.h",
    "audio_packet_ref.cc",
    "audio_packet_ref.h",
    "audio_pipe.cc",
    "audio_pipe.h",
    "audio_plug_detector.cc",
    "audio_plug_detector.h",
    "audio_renderer_format_info.cc",
    "audio_renderer_format_info.h",
    "audio_renderer_impl.cc",
    "audio_renderer_impl.h",
    "audio_renderer1_impl.cc",
    "audio_renderer1_impl.h",
    "audio_renderer2_impl.cc",
    "audio_renderer2_impl.h",
    "audio_server_impl.cc",
    "audio_server_impl.h",
    "driver_output.cc",
    "driver_output.h",
    "driver_ring_buffer.cc",
    "driver_ring_buffer.h",
    "driver_utils.cc",
    "driver_utils.h",
    "fwd_decls.h",
    "main.cc",
    "pending_flush_token.cc",
    "pending_flush_token.h",
    "standard_output_base.cc",
    "standard_output_base.h",
    "throttle_output.cc",
    "throttle_output.h",
    "timeline_control_point.cc",
    "timeline_control_point.h",
    "utils.cc",
    "utils.h",
  ]

  deps = [
    "//garnet/bin/media/audio_server:audio_mixer_lib",
    "//garnet/bin/media/util",
    "//garnet/lib/media/wav_writer",
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/media/audio",
    "//garnet/public/lib/media/fidl",
    "//garnet/public/lib/media/timeline",
    "//garnet/public/lib/media/transport",
    "//zircon/public/lib/audio-proto-utils",
    "//zircon/public/lib/dispatcher-pool",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/zx",
  ]
}

test("tests") {
  testonly = true
  output_name = "audio_server_tests"

  sources = [
    "test/audio_renderer2_tests.cc",
    "test/main.cc",
  ]

  deps = [
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/gtest",
    "//garnet/public/lib/media/fidl",
    "//third_party/googletest:gtest_main",
  ]
}
