# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")

executable("codec_runner_sw_omx") {
  # This executable is only intended for use by codec_factory.  The
  # codec_factory and codec_runner_sw_omx are currently peer packages.
  visibility = [
    "//garnet/bin/media:codec_runner_sw_omx",
    "//garnet/bin/media:codec_runner_sw_omx.manifest",
  ]

  sources = [
    "main.cc",

    # The component-focused parts that don't care about OMX:
    "codec_runner_component.cc",
    "codec_runner_component.h",

    # The local CodecFactory implementation that only needs to handle the
    # specific limited usage by the main CodecFactory implementation.
    "local_codec_factory.cc",
    "local_codec_factory.h",

    # Abstract class to enable a wrapper codec runner as needed.
    "codec_runner.cc",
    "codec_runner.h",

    # The part that cares about OMX.
    "omx_codec_runner.cc",
    "omx_codec_runner.h",
  ]

  deps = [
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/media/fidl:media_codec",

    # This is a reduced set of include paths vs. what the whole pal uses - just
    # the paths necessary to use the OMX aspects of the .so entry point is the
    # intent here.  We don't get this for free as a public_dep from any of the
    # .so codec libs because we use dlopen() on those.
    "//garnet/bin/media/codecs/sw/omx/common/omx_android_pal:omx_so_entry_point_config_source_set",
    "//zircon/public/lib/async-loop-cpp",
  ]
}
