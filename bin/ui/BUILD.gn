# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//third_party/vulkan_loader_and_validation_layers/layers/layers.gni")

package("scenic_tests") {
  testonly = true

  deps = [
    "input_reader/tests",
    "presentation_mode/tests",
    "view_manager/tests",
    "//garnet/lib/ui/gfx/tests",
    "//garnet/lib/ui/scenic/tests",
    "//garnet/public/lib/ui/geometry/cpp:tests",
  ]

  tests = [
    {
      name = "gfx_apptests"
    },
    {
      name = "gfx_unittests"
    },
    {
      name = "geometry_util_unittests"
    },
    {
      name = "input_apptests"
    },
    {
      name = "presentation_mode_unittests"
    },
    {
      name = "scenic_unittests"
    },
    {
      name = "view_manager_apptests"
    },
  ]

  loadable_modules = vulkan_validation_layers.loadable_modules
  resources = vulkan_validation_layers.resources
  public_deps = vulkan_validation_layers.public_deps

  meta = [
    {
      path = rebase_path("meta/scenic_tests.cmx")
      dest = "scenic_tests.cmx"
    },
  ]
}

package("root_presenter") {
  deps = [
    "root_presenter",
  ]

  binary = "root_presenter"

  resources = [
    {
      path = rebase_path("root_presenter/resources/cursor32.png")
      dest = "cursor32.png"
    },
  ]

  meta = [
    {
      path = rebase_path("root_presenter/meta/root_presenter.cmx")
      dest = "root_presenter.cmx"
    },
  ]
}

package("ime_service") {
  deps = [
    "ime",
  ]

  binary = "ime_service"
}

package("view_manager") {
  deps = [
    "view_manager",
  ]

  binary = "view_manager"
}

package("scenic") {
  deps = [
    "scenic",
  ]

  binary = "scenic"

  meta = [
    {
      path = rebase_path("scenic/meta/scenic.cmx")
      dest = "scenic.cmx"
    },
  ]

  loadable_modules = vulkan_validation_layers.loadable_modules

  resources =
      [
        {
          path = "//garnet/public/lib/escher/shaders/model_renderer/main.vert"
          dest = "shaders/model_renderer/main.vert"
        },
      ] + vulkan_validation_layers.resources

  public_deps = vulkan_validation_layers.public_deps
}

package("screencap") {
  deps = [
    "screencap",
  ]

  binary = "screencap"
}

package("scenic_tools") {
  deprecated_system_image = true

  deps = [
    "input",
    "present_view",
    "print_input",
    "screencap",
    "set_renderer_params_HACK:set_renderer_params",
    "set_root_view",
  ]

  binaries = [
    {
      name = "input"
    },
    {
      name = "set_root_view"
    },
    {
      name = "set_renderer_params"
    },
    {
      name = "present_view"
    },
    {
      name = "print_input"
    },
    {
      name = "screencap"
    },
  ]
}
