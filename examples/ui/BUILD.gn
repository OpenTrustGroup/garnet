# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

group("ui") {
  public_deps = [
    "hello_base_view",
    "hello_pose_buffer",
    "hello_scenic",
    "hello_stereo",
    "hello_views",
    "shadertoy/client",
    "shadertoy/service",
    "shapes",
    "shapes_a11y",
    "sketchy",
    "spinning_square",
    "tile",
    "video_display",
  ]
}

# NOTE: this depends on the shadertoy_client example, which is launched by
# the hello_base_view binary.
package("hello_base_view") {
  deps = [
    "hello_base_view",
  ]

  binary = "hello_base_view"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("hello_scenic") {
  deps = [
    "hello_scenic",
  ]

  binary = "hello_scenic"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

# TODO(SCN-794): move out of system image (not sure how to do this for multiple
# binaries).
package("hello_views") {
  deprecated_system_image = true

  deps = [
    "hello_views",
    "hello_views:hello_subview",
  ]

  binaries = [
    {
      name = "hello_views"
    },
    {
      name = "hello_subview"
    },
  ]
}

package("hello_pose_buffer") {
  deps = [
    "hello_pose_buffer",
  ]

  binary = "hello_pose_buffer"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("hello_stereo") {
  deps = [
    "hello_stereo",
  ]

  binary = "hello_stereo"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("shadertoy_client") {
  deps = [
    "shadertoy/client",
  ]

  binary = "shadertoy_client"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("shadertoy_service") {
  deps = [
    "shadertoy/service",
  ]

  binary = "shadertoy_service"

  meta = [
    {
      path = rebase_path("shadertoy/service/meta/shadertoy_service.cmx")
      dest = "shadertoy_service.cmx"
    },
  ]
}

package("shapes_view") {
  deps = [
    "shapes",
  ]

  binary = "shapes_view"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("shapes_a11y_view") {
  deps = [
    "shapes_a11y",
  ]

  binary = "shapes_a11y_view"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("sketchy_client") {
  deps = [
    "sketchy",
  ]

  binary = "sketchy_client"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("spinning_square_view") {
  deps = [
    "spinning_square",
  ]

  binary = "spinning_square_view"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("tile_view") {
  deps = [
    "tile",
  ]

  binary = "tile_view"

  meta = [
    {
      path = rebase_path("meta/ui_example.cmx")
      dest = "ui_example.cmx"
    },
  ]
}

package("video_display") {
  deps = [
    "video_display",
  ]

  binary = "video_display"

  meta = [
    {
      path = rebase_path("video_display/meta/video_display.cmx")
      dest = "video_display.cmx"
    },
  ]
}
