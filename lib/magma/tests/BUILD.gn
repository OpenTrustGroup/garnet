# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//garnet/lib/magma/gnbuild/magma.gni")
import("//build/package.gni")

package("magma-test-build-only") {
  testonly = true
  deprecated_system_image = true

  deps = []

  if (have_libvulkan) {
    deps += [ ":tests" ]
    if (build_intel_gen) {
      deps += [
        "$mesa_build_root:tests",
        "$msd_intel_gen_build_root:msd_intel_test",
        "$msd_intel_gen_build_root:tests",
        "//garnet/drivers/gpu/msd-intel-gen/tests/integration",
      ]
    }
  }
  if (build_msd_arm_mali) {
    deps += [
      ":magma_tests",
      "//garnet/drivers/gpu/msd-arm-mali:tests",
      "//garnet/drivers/gpu/msd-arm-mali/tests/integration",
    ]
  }
}

package("magma-nonhardware-tests") {
  testonly = true
  deprecated_system_image = true

  deps = []
  tests = []

  # Tests that only depend on the msd.
  if (build_msd_arm_mali || build_intel_gen) {
    deps += [ ":magma_tests" ]

    tests += [ {
          name = "magma_sys_unit_tests"
        } ]
  }

  if (build_intel_gen) {
    deps += [
      "$mesa_build_root:tests",
      "$msd_intel_gen_build_root:tests",
    ]

    tests += [
      {
        name = "msd_intel_gen_nonhardware_tests"
      },
      {
        name = "mesa_unit_tests"
      },
      {
        name = "state_pool"
      },
      {
        name = "state_pool_free_list_only"
      },
      {
        name = "state_pool_no_free"
      },
      {
        name = "block_pool_no_free"
      },
    ]
  }

  if (build_msd_arm_mali) {
    deps += [ "//garnet/drivers/gpu/msd-arm-mali:tests" ]
    tests += [ {
          name = "msd_arm_mali_nonhardware_tests"
        } ]
  }
}

package("magma-test") {
  testonly = true
  deprecated_system_image = true

  deps = []
  tests = []

  # Tests that only depend on the msd.
  if (build_msd_arm_mali || build_intel_gen) {
    deps += [
      ":magma_tests",
      "unit_tests:magma_sys_display_unit_tests",
    ]

    tests += [
      {
        name = "magma_abi_conformance_tests"
      },
      {
        name = "magma_sys_display_unit_tests"
      },
    ]
  }

  # Tests that depend on libvulkan existing.
  if (have_libvulkan) {
    deps += [ ":tests" ]

    tests += [
      {
        name = "magma_memcpy"
      },

      {
        name = "vkreadback"
      },

      {
        name = "vkloop"
      },

      {
        name = "vkext"
      },

      {
        name = "vkcopy"
      },
    ]

    if (build_intel_gen) {
      deps += [
        ":autorun",
        "$mesa_build_root:tests",
        "//garnet/drivers/gpu/msd-intel-gen/tests/integration",
      ]

      tests += [
        {
          name = "test_wsi_magma"
        },

        {
          name = "msd_intel_gen_integration_tests"
        },
      ]

      binaries = [ {
            name = "autorun"
            dest = "magma_autorun"
          } ]
    }
  }

  if (build_msd_arm_mali) {
    deps += [
      ":autorun_mali",
      "//garnet/drivers/gpu/msd-arm-mali/tests/integration",
    ]
    tests += [ {
          name = "magma_arm_integration_tests"
        } ]

    binaries = [ {
          name = "autorun_mali"
          dest = "magma_autorun"
        } ]
  }
}

if (build_msd_arm_mali) {
  copy("autorun_mali") {
    sources = [
      "//garnet/lib/magma/scripts/autorun_mali",
    ]
    outputs = [
      "$root_out_dir/autorun_mali",
    ]
  }
}

if (build_intel_gen) {
  copy("autorun") {
    sources = [
      "$magma_build_root/scripts/autorun",
    ]
    outputs = [
      "$root_out_dir/autorun",
    ]
  }
}

if (build_msd_arm_mali || build_intel_gen) {
  group("magma_tests") {
    testonly = true

    public_configs = [ "$magma_build_root:magma_tests_include_config" ]

    public_deps = [
      "unit_tests:magma_abi_conformance_tests",
      "unit_tests:magma_sys_unit_tests",
    ]
  }
}

if (have_libvulkan) {
  group("tests") {
    testonly = true

    public_configs = [ "$magma_build_root:magma_tests_include_config" ]

    public_deps = [
      ":magma_tests",
      "benchmark",
      "vkcube",
      "vkext",
      "vkloop",
      "vkreadback",
    ]
  }
}
