# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/sdk/sdk_atom.gni")
import("//garnet/lib/magma/gnbuild/magma.gni")
import("//garnet/lib/vulkan/image_pipe_swapchain.gni")
import("//third_party/vulkan_loader_and_validation_layers/layers/layers.gni")

group("image_pipe_swapchain") {
  public_deps = [
    "src/swapchain",
  ]
}

sdk_atom("vulkan_layers") {
  domain = "cpp"
  tags = [
    "type:compiled_shared",
    "arch:target",
  ]

  name = "vulkan_layers"

  id = "sdk://pkg/vulkan_layers"

  category = "partner"

  meta = {
    dest = "pkg/vulkan_layers/meta.json"
    # TODO(DX-340): this metadata is bogus, define a proper type.
    schema = "image"
    value = {
      type = "image"
      name = "vulkan_layers"
      root = "pkg/vulkan_layers"
    }
  }

  files = []
  new_files = []

  resources =
      vulkan_validation_layers.resources + image_pipe_swapchain.resources
  loadable_modules = vulkan_validation_layers.loadable_modules +
                     image_pipe_swapchain.loadable_modules
  non_sdk_deps =
      vulkan_validation_layers.public_deps + image_pipe_swapchain.public_deps

  foreach(resource, resources) {
    files += [
      {
        source = resource.path
        dest = "data/" + resource.dest
      },
    ]
    new_files += [
      {
        source = resource.path
        dest = "pkg/vulkan_layers/data/" + resource.dest
      }
    ]
  }

  foreach(loadable_module, loadable_modules) {
    files += [
      {
        source = "$root_out_dir/" + loadable_module.name
        dest = "dist/" + loadable_module.name
        packaged = true
      },
    ]
    new_files += [
      {
        source = "$root_out_dir/" + loadable_module.name
        dest = "arch/$target_cpu/dist/" + loadable_module.name
      },
    ]
  }
}

package("image-pipe-swapchain-tests") {
  testonly = true

  deps = [
    ":image_pipe_swapchain",
    "tests/unit:test_image_pipe_swapchain",
    "//third_party/vulkan_loader_and_validation_layers/layers",
  ]
  binaries = [
    {
      name = "test_image_pipe_swapchain"
    },
  ]
  public_deps =
      vulkan_validation_layers.public_deps + image_pipe_swapchain.public_deps
  loadable_modules = vulkan_validation_layers.loadable_modules +
                     image_pipe_swapchain.loadable_modules
  resources =
      vulkan_validation_layers.resources + image_pipe_swapchain.resources
}

package("vkcube_image_pipe_swapchain") {
  testonly = true

  deps = [
    "tests/vkcube:vkcube_image_pipe_swapchain",
    "//third_party/vulkan_loader_and_validation_layers/layers",
  ]
  binary = "vkcube_image_pipe_swapchain"

  meta = [
    {
      path = rebase_path("meta/vkcube_image_pipe_swapchain.cmx")
      dest = "vkcube_image_pipe_swapchain.cmx"
    },
  ]

  public_deps =
      vulkan_validation_layers.public_deps + image_pipe_swapchain.public_deps
  loadable_modules = vulkan_validation_layers.loadable_modules +
                     image_pipe_swapchain.loadable_modules
  resources =
      [
        {
          path = rebase_path("tests/vkcube/bbb_frame.yuv")
          dest = "bbb_frame.yuv"
        },
      ] + vulkan_validation_layers.resources + image_pipe_swapchain.resources
}
