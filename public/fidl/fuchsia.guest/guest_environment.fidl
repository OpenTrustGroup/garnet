// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.guest;

using fuchsia.sys;

struct GuestLaunchInfo {
  // The URL of the package to launch.
  string url;

  // Arguments that will be passed to the VMM binary when launching this guest.
  //
  // See //garnet/bin/guest/vmm/guest_config.cc for valid options.
  vector<string>? vmm_args;

  // A diagnostic string to associate with this instance.
  string? label;

  // A flat namespace to be appended to the default namespace for the VMM
  // process.
  fuchsia.sys.FlatNamespace? flat_namespace;
};

interface GuestEnvironment {
  // Launch a new guest instance into this environment.
  1: LaunchGuest(GuestLaunchInfo launch_info,
                 request<GuestController>? controller) -> (GuestInfo info);

  // Query for guests running in this environment.
  2: ListGuests() -> (vector<GuestInfo> env_infos);

  // Connect to a currently running guest instance identified via |id|. The
  // |id| can be found via a call to |ListGuests|.
  3: ConnectToGuest(uint32 id, request<GuestController> controller);

  // Returns an interface that can be used to access the host vsock endpoint.
  4: GetHostVsockEndpoint(request<HostVsockEndpoint> endpoint);
};
