// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.netstack;

enum NetAddressFamily {
  UNSPECIFIED = 0;
  IPV4 = 1;
  IPV6 = 2;
};

struct Ipv4Address {
  array<uint8>:4 addr;
};

struct Ipv6Address {
  array<uint8>:16 addr;
};

// TODO(tkilbourn): make this a union when they're fully supported
struct NetAddress {
  //NetAddressFamily family = UNSPECIFIED;
  NetAddressFamily family;

  // At most one of the following fields is non-NULL depending on the value of
  // |family|.  The address is expressed in network byte order, so the most
  // significant byte ("127" in the address "127.0.0.1") will be at index 0.
  Ipv4Address? ipv4;
  Ipv6Address? ipv6;
};

struct SocketAddress {
  // The IPv4 or IPv6 address.
  NetAddress addr;

  // The port number.
  uint16 port;
};

struct Subnet {
  // The IPv4 or IPv6 address.
  NetAddress addr;

  // The prefix length of the netmask. E.g. for 192.168.1.1/24, the prefix
  // length is 24, corresponding to a netmask of 255.255.255.0.
  uint8 prefix_len;
};
