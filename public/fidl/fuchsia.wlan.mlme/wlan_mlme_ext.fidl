// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.wlan.mlme;
using fuchsia.wlan.stats;

// Custom primitives for communicating between the wlan service and the MLME drivers.
// The primitives defined here are not part of the official 802.11 MLME SAP interface specification,
// but follow the same principle for the sake of consistency.


// SIGNAL_REPORT.indication

struct SignalReportIndication {
    int8 rssi_dbm;
};

// EAPOL.indication

struct EapolIndication {
    array<uint8>:6 src_addr;
    array<uint8>:6 dst_addr;
    vector<uint8> data;
};

// DEVICE_QUERY.request

struct DeviceQueryRequest {
    int32 foo;
};

// DEVICE_QUERY.confirm

enum MacRole {
    CLIENT = 1;
    AP = 2;
};

struct BandCapabilities {
    vector<uint16> basic_rates;
    uint16 base_frequency;
    vector<uint8> channels;
};

// TODO(tkilbourn): add more fields for debugging. For now, we just have the information
// necessary for the SME.
struct DeviceQueryConfirm {
    array<uint8>:6 mac_addr;
    MacRole role;
    vector<BandCapabilities> bands;
};

// STATS_QUERY.response

struct StatsQueryResponse {
    fuchsia.wlan.stats.IfaceStats stats;
};

// Method ordinals are defined in wlan_mlme.fidl to prevent error prone overlaps with official
// MLME primitives.
