// Copyright 2018 Open Trust Group
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library gzos.reeagent;

using zx;

enum MessageType {
  Tipc = 0;
  GzIpc = 1;
};

struct MessageChannelInfo {
  MessageType type;
  uint32 id;
  uint32 max_message_size;
  handle<channel> channel;
};

interface ReeMessage {
  // Add message channel(s)
  1: AddMessageChannel(vector<MessageChannelInfo> infos) -> (zx.status err);

  // Start to service ree message channels
  2: Start(vector<uint32>? ids) -> (zx.status err);

  // Stop to service ree message channels
  3: Stop(vector<uint32>? ids) -> (zx.status err);
};
