# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

executable("escher_unittests") {
  testonly = true

  defines = [ "VULKAN_HPP_NO_EXCEPTIONS" ]

  sources = [
    "geometry/bounding_box_unittest.cc",
    "gpu_mem_unittest.cc",
    "hash_unittest.cc",
    "impl/glsl_compiler_unittest.cc",
    "impl/pipeline_cache_unittest.cc",
    "math/rotations_unittest.cc",
    "mesh_spec_unittest.cc",
    "object_unittest.cc",
    "pose_buffer_latching_test.cc",
    "run_all_unittests.cc",
    "scene/directional_light_unittest.cc",
    "shape/rounded_rect_unittest.cc",
    "transform_unittest.cc",
    "vk/buffer_unittest.cc",
  ]

  if (is_fuchsia) {
    sources += [
      "flib/fence_listener_unittest.cc",
      "flib/fence_set_listener_unittest.cc",
      "flib/release_fence_signaller_unittest.cc",
      "flib/test_with_message_loop.cc",
      "flib/test_with_message_loop.h",
      "flib/util.cc",
      "flib/util.h",
    ]
  }

  deps = [
    ":gtest_escher",
    "base:base_unittests",
    "//garnet/public/lib/fxl",
    "//third_party/shaderc/third_party/glslang",
    "//third_party/shaderc/third_party/glslang:SPIRV",
    "//third_party/shaderc/third_party/glslang:glslang-default-resource-limits",
  ]

  libs = [ "pthread" ]

  include_dirs = [
    "//lib",
    "//garnet/public/lib/escher",
    "//third_party/glm",
  ]
}

# Extends GTest with VK_TEST() and VK_TEST_F() macros, which behave just like
# TEST() and TEST_F(), except that they are dynamically disabled when Vulkan
# is not available.
source_set("gtest_vulkan") {
  testonly = true

  defines = [ "VULKAN_HPP_NO_EXCEPTIONS" ]

  public_deps = [
    "//third_party/googletest:gtest",
  ]

  if (is_fuchsia) {
    public_deps += [ "//garnet/public/lib/vulkan" ]
  }

  if (is_linux) {
    public_configs = [ "//garnet/public/lib/escher:vulkan_linux" ]
  }

  sources = [
    "gtest_vulkan.cc",
    "gtest_vulkan.h",
    "gtest_vulkan_internal.h",
  ]
}

# Builds upon gtest_vulkan to provide the functions SetUpTestEscher()
# and TearDownTestEscher(), which should be called from main(), and
# GetTestEscher(), which may be called from VK_TEST().  All of these
# functions are in namespace escher.
source_set("gtest_escher") {
  testonly = true

  public_deps = [
    ":gtest_vulkan",
    "//garnet/public/lib/escher",
  ]

  sources = [
    "gtest_escher.cc",
    "gtest_escher.h",
  ]
}
