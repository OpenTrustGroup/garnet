# Copyright 2014 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

executable("lib_fidl_cpp_tests") {
  testonly = true

  sources = [
    "run_all_unittests.cc",
  ]

  deps = [
    ":test_sources",
    "//garnet/public/lib/fxl",
    "//third_party/googletest:gtest",
  ]
}

source_set("test_sources") {
  testonly = true

  sources = [
    "array_unittest.cc",
    "binding_callback_unittest.cc",
    "binding_set_unittest.cc",
    "binding_unittest.cc",
    "bounds_checker_unittest.cc",
    "buffer_unittest.cc",
    "connector_unittest.cc",
    "constant_unittest.cc",
    "equals_unittest.cc",
    "formatting_unittest.cc",
    "handle_passing_unittest.cc",
    "interface_ptr_set_unittest.cc",
    "interface_ptr_unittest.cc",
    "interface_unittest.cc",
    "iterator_util_unittest.cc",
    "map_unittest.cc",
    "message_builder_unittest.cc",
    "message_unittest.cc",
    "request_response_unittest.cc",
    "router_unittest.cc",
    "sample_service_unittest.cc",
    "serialization_api_unittest.cc",
    "serialization_warning_unittest.cc",
    "string_unittest.cc",
    "struct_unittest.cc",
    "union_unittest.cc",
    "util/container_test_util.cc",
    "util/container_test_util.h",
    "util/iterator_test_util.h",
    "util/message_queue.cc",
    "util/message_queue.h",
    "util/test_utils.cc",
    "util/test_utils.h",
    "util/test_waiter.cc",
    "util/test_waiter.h",
  ]

  public_deps = [
    "//garnet/public/lib/fidl/compiler/interfaces/tests:test_interfaces",
    "//garnet/public/lib/fidl/cpp/bindings",
    "//third_party/googletest:gtest",
    "//zircon/public/lib/async-loop-cpp",
  ]
}

#source_set("perftests") {
#  testonly = true
#
#  sources = [
#    "bindings_perftest.cc",
#  ]
#
#  deps = [
#    "mojo/public:gtest",
#    "lib/fidl/cpp/bindings",
#    "lib/fidl/cpp/bindings:callback",
#    "mojo/public/cpp/environment:standalone",
#    "mojo/public/cpp/system",
#    "mojo/public/cpp/test_support",
#    "mojo/public/cpp/utility",
#    "lib/fidl/compiler/interfaces/tests:test_interfaces",
#  ]
#}

## TODO(vardhan): This should be testonly, but for that to happen, its
## dependents (cython etc.) need also be testonly.
#source_set("") {
#  sources = [
#    "validation_test_input_parser.cc",
#    "validation_test_input_parser.h",
#  ]
#}

## TODO(vardhan): Merge with mojo_public_bindings_test_utils.
#source_set("validation_util") {
#  testonly = true
#
#  sources = [
#    "validation_util.cc",
#    "validation_util.h",
#  ]
#
#  deps = [
#    ":mojo_public_bindings_test_utils",
#  ]
#
#  deps = [
#    "mojo/public:gtest",
#    "mojo/public/cpp/test_support",
#  ]
#}

#executable("versioning_test_service") {
#  testonly = true
#
#  deps = [
#    ":versioning_test_service_source_set",
#  ]
#}

#source_set("versioning_test_service_source_set") {
#  testonly = true
#  visibility = [ ":*" ]
#
#  sources = [
#    "versioning_test_service.cc",
#  ]
#
#  deps = [
#    "mojo/public/cpp/application:standalone",
#    "lib/fidl/cpp/bindings",
#    "mojo/public/cpp/system",
#    "lib/fidl/compiler/interfaces/tests:versioning_test_service_interfaces",
#  ]
#}

#executable("versioning_apptests") {
#  testonly = true
#
#  deps = [
#    ":versioning_apptest_source_set",
#  ]
#  data_deps = [
#    ":versioning_test_service",
#  ]
#}

#source_set("versioning_apptest_source_set") {
#  testonly = true
#  visibility = [ ":*" ]
#
#  sources = [
#    "versioning_apptest.cc",
#  ]
#
#  deps = [
#    "mojo/public/cpp/application:standalone",
#    "mojo/public/cpp/application:test_support_standalone",
#    "lib/fidl/cpp/bindings",
#    "mojo/public/cpp/system",
#    "lib/fidl/compiler/interfaces/tests:versioning_test_client_interfaces",
#  ]
#}

package("fidl_tests") {
  testonly = true
  system_image = true

  deps = [
    ":lib_fidl_cpp_tests",
    "//garnet/public/lib/fidl/cpp:fidl_cpp_unittests",
  ]

  tests = [{
        name = "fidl_cpp_unittests"
      }, {
        name = "lib_fidl_cpp_tests"
      } ]
}
