# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

source_set("bindings2") {
  sources = [
    "binding.h",
    "binding_set.h",
    "interface_handle.h",
    "interface_ptr.h",
    "interface_ptr_set.h",
    "interface_request.h",
    "internal/header.h",
    "internal/implementation.h",
    "internal/message_reader.cc",
    "internal/message_reader.h",
    "internal/message_handler.cc",
    "internal/message_handler.h",
    "internal/pending_response.cc",
    "internal/pending_response.h",
    "internal/proxy_controller.cc",
    "internal/proxy_controller.h",
    "internal/stub.cc",
    "internal/stub.h",
    "internal/stub_controller.cc",
    "internal/stub_controller.h",
    "internal/weak_stub_controller.cc",
    "internal/weak_stub_controller.h",
    "put.cc",
    "put.h",
    "string.cc",
    "string.h",
    "take.h",
    "traits.h",
    "vector.h",
  ]

  public_deps = [
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-default",
    "//zircon/public/lib/fidl",
    "//zircon/public/lib/zx",
  ]

  public_configs = [ "//garnet/public:config" ]
}

executable("fidl_bindings2_unittests") {
  testonly = true

  sources = [
    "binding_set_unittest.cc",
    "binding_unittest.cc",
    "interface_handle_unittest.cc",
    "interface_ptr_set_unittest.cc",
    "interface_ptr_unittest.cc",
    "interface_request_unittest.cc",
    "internal/message_reader_unittest.cc",
    "internal/proxy_controller_unittest.cc",
    "internal/stub_controller_unittest.cc",
    "put_unittest.cc",
    "string_unittest.cc",
    "take_unittest.cc",
    "vector_unittest.cc",
  ]

  deps = [
    ":bindings2",
    "//garnet/public/lib/fidl/cpp/bindings2/test",
    "//garnet/public/lib/fidl/cpp/test",
    "//garnet/public/lib/fxl/test:gtest_main",
    "//third_party/gtest",
    "//zircon/public/lib/async-loop",
  ]
}
