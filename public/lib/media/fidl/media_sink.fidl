// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library media;

// import "lib/media/fidl/media_transport.fidl";
// import "lib/media/fidl/media_types.fidl";
// import "lib/media/fidl/timeline_controller.fidl";

// TODO(dalesat): Define a media sink that multiplexes streams.

// Consumes media streams and delivers them to specified destinations.
interface MediaSink {
  // TODO(dalesat): Support fanout to many destinations.

  // Request the timeline control point for this sink
  1: GetTimelineControlPoint(request<MediaTimelineControlPoint> timeline_control_point);

  // Sets the input media type and produces a new packet consumer that consumes
  // that media type. Returns a null consumer if the media type could not be
  // supported. Calling ConsumeMediaType when a ConsumeMediaType call is already
  // pending will cause the sink to close the connection.
  2: ConsumeMediaType(MediaType media_type)
      -> (MediaPacketConsumer? packet_consumer);
};
