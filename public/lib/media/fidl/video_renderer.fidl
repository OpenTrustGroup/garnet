// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library media;

// import "lib/ui/geometry/fidl/geometry.fidl";
// import "lib/ui/views/fidl/view_token.fidl";

// Video-specific renderer.
interface VideoRenderer {
  // Gets the status. To get the status immediately, call
  // GetStatus(kInitialStatus). To get updates thereafter, pass the version
  // sent in the previous callback.
  1: GetStatus(uint64 version_last_seen)
      -> (uint64 version, VideoRendererStatus @status);

  // Creates a video view.
  2: CreateView(request<views_v1_token.ViewOwner> view_owner);
};

// VideoRenderer status information.
struct VideoRendererStatus {
  // Size of the video currently being displayed.
  geometry.Size video_size;

  // Relative dimensions of a pixel.
  geometry.Size pixel_aspect_ratio;
};
